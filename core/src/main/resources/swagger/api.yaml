swagger: '2.0'
info:
  title: Parrot API
  description: |
    # Parrot API

    Text attributes _italic_, *italic*, __bold__, **bold**, `monospace`.

    Horizontal rule:

    ---

    Bullet list:

      * apples
      * oranges
      * pears

    Numbered list:

      1. apples
      2. oranges
      3. pears

    A [link](http://example.com).

    Tables:

    | Column1 | Collumn2 |
    | ------- | -------- |
    | cell1   | cell2    |
  version: "0.1.0"
host: parrot:8080
schemes:
  - http
basePath: /parrot
produces:
  - application/json
paths:
  /processors:
    get:
      operationId: getProcessors
      summary: Parrot Processors' list
      description: Lists all existing Parrot Processors
      responses:
        200:
          description: The list of all existing Parrot Processors
          schema:
            $ref: '#/definitions/ParrotProcessors'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: createProcessor
      summary: Parrot Processor creation
      description: Creates a new Parrot Processor
      parameters:
        - $ref: '#/parameters/processor'
      responses:
        200:
          description: The created Processor
          schema:
            $ref: '#/definitions/ParrotProcessor'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /processors/{id}:
    get:
      operationId: getProcessor
      summary: A Parrot Processors
      description: Gets the configuration info for a Parrot Processor
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: The configuration info for a Parrot Processor
          schema:
            $ref: '#/definitions/ParrotProcessor'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: updateProcessor
      summary: Parrot Processor update
      description: Updates a Parrot Processor
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/processor'
      responses:
        200:
          description: The updated Parrot Processor
          schema:
            $ref: '#/definitions/ParrotProcessor'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteProcessor
      summary: Parrot Processor delete
      description: Deletes a Parrot Processor
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: If the Parrot Processor had been successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /sinks:
    get:
      operationId: getSinks
      summary: Parrot Sinks' list
      description: Lists all existing Parrot Sinks
      responses:
        200:
          description: The list of all existing Parrot Sinks
          schema:
            $ref: '#/definitions/ParrotSinks'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: createSink
      summary: Parrot Sink creation
      description: Creates a new Parrot Sink
      parameters:
        - $ref: '#/parameters/sink'
      responses:
        200:
          description: The created Sink
          schema:
            $ref: '#/definitions/ParrotSink'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /sinks/{id}:
    get:
      operationId: getSink
      summary: A Parrot Sink
      description: Gets the configuration info for a Parrot Sink
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: The configuration info for a Parrot Sink
          schema:
            $ref: '#/definitions/ParrotSink'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: updateSink
      summary: Parrot Sink update
      description: Updates an existing Sink
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/sink'
      tags:
        - galeve
      responses:
        200:
          description: The updated Sink
          schema:
            $ref: '#/definitions/ParrotSink'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
definitions:
  ParrotNode:
    type: object
    required:
      - id
      - hostname
    properties:
      id:
        type: integer
        format: int32
        description: Parrot Node id.
      hostname:
        type: string
        description: Parrot Node hostname.
  ParrotProcessor:
    type: object
    required:
      - id
      - source
      - sink
    properties:
      id:
        type: string
        description: Processor id.
      source:
        $ref: '#/definitions/ParrotSource'
      sink:
        $ref: '#/definitions/ParrotSink'
      status:
        type:
        enum:
          - "STARTED"
          - "STOPPED"
  ParrotProcessors:
    type: array
    items:
      $ref: '#/definitions/ParrotProcessor'
  ParrotProcessorStatus:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Processor id.
      status:
        type: string
        description: The processor status in the cluster (STARTED, STOPPED)
  ParrotSource:
    type: object
    required:
      - logical.name
      - source.class
      - bootstrap.servers
    properties:
      logical.name:
        type: string
        description: This corrisponds to the <b>logical name</b> named of a Debezium Connector. |
            For example, if the Processor has a PostgreSQL Parrot source, the logical name is the value of the |
            database.server.name property in the config part of the Debezium Connector.
      source.class:
        type: string
        description: The class which implements the Parrot Processor's Source
      bootstrap.servers:
        type: string
        description:  A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The Parrot Processor will make use of all servers irrespective of which servers are specified here for bootstrapping. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the form 'host1:port1,host2:port2,...'. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).
      schema.whitelist:
        type: string
        description: Schema whitelist (where supported).
      schema.blacklist:
        type: string
        description: Schema blacklist (where supported).
      table.whitelist:
        type: string
        description: Table whitelist (where supported).
      table.blacklist:
        type: string
        description: Table blacklist (where supported).
  ParrotSink:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Sink ID.
      sink.class:
        type: string
        description: The class which implements the Parrot Processor's Sink
  ParrotSinks:
     type: array
     items:
        $ref: '#/definitions/ParrotSink'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
parameters:
  id:
    name: id
    in: path
    description: ID
    required: true
    type: string
  processor:
    name: processor
    in: body
    description: Processor definition
    schema:
      $ref: '#/definitions/ParrotProcessor'
    required: true
  sink:
    name: sink
    in: body
    description: Sink definition
    schema:
      $ref: '#/definitions/ParrotSink'
    required: true